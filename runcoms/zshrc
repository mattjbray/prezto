#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...


#====[ Functions ]====

  calc() { echo "$@" | bc -l ; }

#====[ Vim ]====

  export EDITOR=vim

  # c-e in insert mode jumps to end of line
  bindkey "^E" end-of-line

  # c-r in insert mode opens reverse history search
  bindkey "^R" history-incremental-search-backward

  # allow deletion past insertion point
  zle -A .backward-kill-word   vi-backward-kill-word
  zle -A .backward-delete-char vi-backward-delete-char

#====[ Alias for git dotfiles repository ]====

  alias git-dotfiles="git --git-dir=$HOME/.dotfiles.git/ --work-tree=$HOME"

#====[ Aliases ]====

  alias switch-wifi='sudo netctl-auto switch-to'

#====[ ssh-agent ]====

  alias startx='ssh-agent startx'
  alias ssh-add-all='ssh-add ~/.ssh/engine.pem ~/.ssh/id_rsa ~/.ssh/optimor_id_rsa'

#====[ Optimor ]====

  export PATH_OPTIMOR='/opt/optimor'
  export PATH=$PATH_OPTIMOR/bin/inpath:$PATH

  bmenv() {
    if [ $(tmux list-sessions -F '#{session_name}' | grep "^$1$") ]; then
      # session exists
      tmux attach -t $1
    else
      export BMENV=$1 && cd /opt/optimor/src/billmonitor/$1 && tmux new-session -s $1
    fi
  }

  bmvenv() {
    source /opt/optimor/bin/python_envs/$1/bin/activate
    export PYTHONPATH=`pwd`:`pwd`/backend
    export LD_LIBRARY_PATH=`pwd`/engine/cxx/lib
  }

  if [ -n "${BMENV+x}" ]; then
    bmvenv $BMENV
  fi

  alias cookbooks='tmux attach-session -t cookbooks || (cd /opt/optimor/src/optimor-cookbooks && tmux new-session -s cookbooks)'

  alias bmdebug='tmux attach-session -t debug || (cd /opt/optimor/src/billmonitor/debug && tmux new-session -s debug)'
  alias bmfrontend='tmux attach-session -t frontend || (cd /opt/optimor/src/billmonitor-frontend/master && tmux new-session -s frontend)'
  alias tbackend='tmux attach-session -t theia-backend || (cd /opt/optimor/src/billmonitor/theia && tmux new-session -s theia-backend)'
  alias tfrontend='tmux attach-session -t theia-frontend || (cd /opt/optimor/src/theia-frontend/master && tmux new-session -s theia-frontend)'

  alias infab='cat doc/some_fabs.md | grep -iC 2'

#====[ Optimor/Docker ]====

  backend_bash() {
    mongodb=$1
    shift
    set -x
    # use the $debian_chroot var to display the mongodb name in the prompt
    docker run -it --rm --name backend-bash-$mongodb -e BM_ENV=development --link $mongodb:mongodb -v $(pwd):/opt/optimor/src/billmonitor/theia_backend -e debian_chroot=$mongodb "$@" registry.billmonitor.com:5000/theia_backend_test bash
    set +x
  }

  engine_bash() {
    mongodb=$1
    shift
    set -x
    # use the $debian_chroot var to display the mongodb name in the prompt
    docker run -it --rm --name engine-bash-$mongodb -e BM_ENV=development --link $mongodb:mongodb -v $(pwd):/opt/optimor/src/billmonitor/theia_backend -e debian_chroot=$mongodb/engine "$@" registry.billmonitor.com:5000/theia_engine bash
    set +x
  }

  alias frontend_bash='set -x; docker run -it --rm --name theia-frontend-builder -v $(pwd):/host_code -p 9000:9000 -p 35729:35729 -e DOCKER_USER_ID=$(id -u) -e DOCKER_GROUP_ID=$(id -g) registry.billmonitor.com:5000/theia-frontend-builder /host_code/bin/in_docker/bash_with_host_user; set +x'

#====[ PATH ]====

  export PATH=$HOME/.local/bin:$PATH
  export PATH=$HOME/.cabal/bin:$PATH
  export PATH="$PATH:$HOME/.rvm/bin" # Add RVM to PATH for scripting
